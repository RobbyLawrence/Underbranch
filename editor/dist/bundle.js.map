{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://underbranch-editor/./src/App.js","webpack://underbranch-editor/./src/LaTeXEditor.js","webpack://underbranch-editor/./src/PreviewPane.js","webpack://underbranch-editor/./src/Toolbar.js","webpack://underbranch-editor/webpack/bootstrap","webpack://underbranch-editor/webpack/runtime/define property getters","webpack://underbranch-editor/webpack/runtime/hasOwnProperty shorthand","webpack://underbranch-editor/webpack/runtime/make namespace object","webpack://underbranch-editor/./src/index.js"],"sourcesContent":["// Pull React hooks off the global React object. This file assumes React is\n// available globally (e.g. via a <script> tag or bundler that provides it).\nconst { useState, useEffect } = React;\n\n// Main application component. This is a small, non-JSX React component that\n// uses React.createElement to build the UI. It wires together three pieces:\n// - Toolbar: lets the user switch view modes and perform actions\n// - LaTeXEditor: an editor component for editing LaTeX source\n// - PreviewPane: renders the LaTeX source as HTML or a preview\nconst App = () => {\n    // latexCode holds the current LaTeX source the user is editing. We\n    // initialize it with a small sample document so the preview shows\n    // something on first load.\n    const [latexCode, setLatexCode] = useState(`\\\\documentclass{article}\n\\\\usepackage[utf8]{inputenc}\n\\\\title{My LaTeX Document}\n\\\\author{Author Name}\n\\\\date{\\\\today}\n\n\\\\begin{document}\n\n\\\\maketitle\n\n\\\\section{Introduction}\nThis is a sample LaTeX document. You can edit this text in the editor.\n\n\\\\section{Mathematical Equations}\nHere's a mathematical equation:\n\\\\begin{equation}\nE = mc^2\n\\\\end{equation}\n\nAnd an inline equation: $\\\\alpha + \\\\beta = \\\\gamma$\n\n\\\\subsection{More Examples}\n\\\\begin{itemize}\n\\\\item First item\n\\\\item Second item\n\\\\item Third item\n\\\\end{itemize}\n\n\\\\end{document}`);\n\n    // viewMode controls which panes are visible. Possible values:\n    // - 'editor'  -> only the editor is shown\n    // - 'preview' -> only the preview is shown\n    // - 'split'   -> both are shown side-by-side\n    const [viewMode, setViewMode] = useState('split'); // 'editor', 'preview', 'split'\n\n    // handleCodeChange is passed to the editor component. It receives the\n    // new text value and updates the latexCode state. We guard against\n    // undefined/null by falling back to an empty string.\n    const handleCodeChange = (value) => {\n        setLatexCode(value || '');\n    };\n\n    // Debug: log viewMode transitions so we can trace state changes while\n    // reproducing the issue in the browser console.\n    useEffect(() => {\n        console.log('[App] viewMode changed ->', viewMode);\n        // Also update the document title so the current mode is visible\n        // in the browser tab (easy to spot without opening devtools).\n        try {\n            document.title = `LaTeX Editor — ${viewMode}`;\n        } catch (e) {\n            // ignore (server side or non-browser env)\n        }\n        // Trigger a resize event to nudge layout systems (Monaco, CSS)\n        // to recompute sizes when the view mode changes.\n        try {\n            window.dispatchEvent(new Event('resize'));\n        } catch (e) {\n            // ignore in non-browser environments\n        }\n    }, [viewMode]);\n\n    // The UI layout is built with React.createElement calls instead of JSX.\n    // To avoid layout glitches when switching modes we render both panes\n    // consistently and toggle their visibility/size using explicit CSS\n    // class names: 'split', 'full', or 'hidden'. This prevents frequent\n    // unmount/remount of the editor which can cause Monaco/DOM layout issues.\n    const editorClass = viewMode === 'split' ? 'split' : (viewMode === 'editor' ? 'full' : 'hidden');\n    const previewClass = viewMode === 'split' ? 'split' : (viewMode === 'preview' ? 'full' : 'hidden');\n\n    const editorVisible = viewMode === 'split' || viewMode === 'editor';\n    const previewVisible = viewMode === 'split' || viewMode === 'preview';\n\n    return React.createElement('div', { className: 'app' },\n        React.createElement(Toolbar, {\n            viewMode: viewMode,\n            onViewModeChange: setViewMode,\n            latexCode: latexCode\n        }),\n\n        React.createElement('div', { className: `editor-container mode-${viewMode}` },\n            // Editor pane is always present but may be hidden via the\n            // 'hidden' class. This keeps Monaco mounted and stable.\n            React.createElement('div', {\n                className: `editor-pane ${editorClass}`\n            },\n                React.createElement(LaTeXEditor, {\n                    value: latexCode,\n                    onChange: handleCodeChange,\n                    isVisible: editorVisible\n                })\n            ),\n\n            // Preview pane is always present as well; it will be hidden\n            // when not in 'preview' or 'split' modes.\n            React.createElement('div', {\n                className: `preview-pane ${previewClass}`\n            },\n                React.createElement(PreviewPane, {\n                    latexCode: latexCode\n                })\n            )\n        )\n    );\n};\n\nexport default App;\n","const { useEffect, useRef } = React;\n\nconst LaTeXEditor = ({ value, onChange, isVisible = true }) => {\n    const editorRef = useRef(null);\n    const monacoRef = useRef(null);\n    const layoutTimeout = useRef(null);\n\n    useEffect(() => {\n        // Initialize Monaco Editor\n        if (window.require && !monacoRef.current) {\n            window.require.config({\n                paths: { vs: \"https://unpkg.com/monaco-editor@0.44.0/min/vs\" },\n            });\n\n            window.require([\"vs/editor/editor.main\"], () => {\n                if (editorRef.current && !monacoRef.current) {\n                    // Configure LaTeX language\n                    monaco.languages.register({ id: \"latex\" });\n\n                    // Define custom theme\n                    monaco.editor.defineTheme(\"underbranch-theme\", {\n                        base: \"vs\",\n                        inherit: true,\n                        rules: [\n                            { token: \"keyword\", foreground: \"B5632D\" },\n                            { token: \"string\", foreground: \"218721\" },\n                            {\n                                token: \"comment\",\n                                foreground: \"737373\",\n                                fontStyle: \"italic\",\n                            },\n                            { token: \"bracket\", foreground: \"505050\" },\n                        ],\n                        colors: {\n                            \"editor.background\": \"#FFFFFF\",\n                            \"editor.foreground\": \"#333333\",\n                            \"editor.lineHighlightBackground\": \"#F5F5F5\",\n                            \"editorCursor.foreground\": \"#B5632D\",\n                            \"editor.selectionBackground\": \"#E8D3C7\",\n                            \"editorLineNumber.foreground\": \"#999999\",\n                        },\n                    });\n\n                    // Syntax highlighting\n                    monaco.languages.setMonarchTokensProvider(\"latex\", {\n                        tokenizer: {\n                            root: [\n                                [/\\\\[a-zA-Z@]+/, \"keyword\"],\n                                [/\\\\begin\\{[^}]+\\}/, \"keyword\"],\n                                [/\\\\end\\{[^}]+\\}/, \"keyword\"],\n                                [/\\$.*?\\$/, \"string\"],\n                                [/\\\\\\(.*?\\\\\\)/, \"string\"],\n                                [/\\\\\\[.*?\\\\\\]/, \"string\"],\n                                [/%.*$/, \"comment\"],\n                                [/\\{/, \"bracket\"],\n                                [/\\}/, \"bracket\"],\n                            ],\n                        },\n                    });\n\n                    // LaTeX command definitions\n                    const latexCommands = [\n                        {\n                            command: \"begin\",\n                            insertText: \"begin{$0}\",\n                            documentation: \"Begin environment\",\n                        },\n                        {\n                            command: \"end\",\n                            insertText: \"end{$0}\",\n                            documentation: \"End environment\",\n                        },\n                        {\n                            command: \"textbf\",\n                            insertText: \"textbf{$0}\",\n                            documentation: \"Bold text\",\n                        },\n                        {\n                            command: \"textit\",\n                            insertText: \"textit{$0}\",\n                            documentation: \"Italic text\",\n                        },\n                        {\n                            command: \"underline\",\n                            insertText: \"underline{$0}\",\n                            documentation: \"Underline text\",\n                        },\n                        {\n                            command: \"section\",\n                            insertText: \"section{$0}\",\n                            documentation: \"Section\",\n                        },\n                        {\n                            command: \"subsection\",\n                            insertText: \"subsection{$0}\",\n                            documentation: \"Subsection\",\n                        },\n                        {\n                            command: \"subsubsection\",\n                            insertText: \"subsubsection{$0}\",\n                            documentation: \"Subsubsection\",\n                        },\n                        {\n                            command: \"chapter\",\n                            insertText: \"chapter{$0}\",\n                            documentation: \"Chapter\",\n                        },\n                        {\n                            command: \"title\",\n                            insertText: \"title{$0}\",\n                            documentation: \"Document title\",\n                        },\n                        {\n                            command: \"author\",\n                            insertText: \"author{$0}\",\n                            documentation: \"Document author\",\n                        },\n                        {\n                            command: \"date\",\n                            insertText: \"date{$0}\",\n                            documentation: \"Document date\",\n                        },\n                        {\n                            command: \"emph\",\n                            insertText: \"emph{$0}\",\n                            documentation: \"Emphasize text\",\n                        },\n                        {\n                            command: \"frac\",\n                            insertText: \"frac{$1}{$2}\",\n                            documentation: \"Fraction\",\n                        },\n                        {\n                            command: \"sqrt\",\n                            insertText: \"sqrt{$0}\",\n                            documentation: \"Square root\",\n                        },\n                    ];\n\n                    const latexEnvironments = [\n                        \"document\",\n                        \"equation\",\n                        \"align\",\n                        \"itemize\",\n                        \"enumerate\",\n                        \"figure\",\n                        \"table\",\n                        \"center\",\n                        \"abstract\",\n                    ];\n\n                    // Register completion provider for LaTeX commands\n                    monaco.languages.registerCompletionItemProvider(\"latex\", {\n                        triggerCharacters: [\"\\\\\", \"{\"],\n                        provideCompletionItems: (model, position) => {\n                            const lineContent = model.getLineContent(\n                                position.lineNumber,\n                            );\n                            const textBeforeCursor = lineContent.substring(\n                                0,\n                                position.column - 1,\n                            );\n\n                            // Command completions (after \\)\n                            const commandMatch =\n                                textBeforeCursor.match(/\\\\([a-zA-Z]*)$/);\n                            if (commandMatch) {\n                                const partialCommand = commandMatch[1];\n                                const textAfterCursor = lineContent.substring(\n                                    position.column - 1,\n                                );\n\n                                const suggestions = latexCommands\n                                    .filter((cmd) =>\n                                        cmd.command.startsWith(partialCommand),\n                                    )\n                                    .map((cmd) => {\n                                        // Check if cursor is inside braces and there's a closing brace\n                                        const hasOpenBrace = textBeforeCursor.match(/\\{[^}]*$/);\n                                        const hasClosingBrace = hasOpenBrace && textAfterCursor.startsWith('}');\n\n                                        // If we're inside braces with a closing brace, don't include it in insertText\n                                        let insertText = cmd.insertText;\n                                        let endColumn = position.column;\n\n                                        if (hasClosingBrace && insertText.includes('{')) {\n                                            // Remove the closing brace from commands like \"textbf{$0}\"\n                                            insertText = insertText.replace(/\\{([^}]*)\\}/, '{$1');\n                                            endColumn = position.column + 1; // Include the closing brace in replacement\n                                        }\n\n                                        return {\n                                            label: cmd.command,\n                                            kind: monaco.languages\n                                                .CompletionItemKind.Function,\n                                            insertText: insertText,\n                                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                                            documentation: cmd.documentation,\n                                            range: {\n                                                startLineNumber:\n                                                    position.lineNumber,\n                                                startColumn:\n                                                    position.column -\n                                                    partialCommand.length,\n                                                endLineNumber: position.lineNumber,\n                                                endColumn: endColumn,\n                                            },\n                                        };\n                                    });\n                                return { suggestions };\n                            }\n\n                            // Environment completions (after \\begin{)\n                            const beginMatch =\n                                textBeforeCursor.match(/\\\\begin\\{([^}]*)$/);\n                            if (beginMatch) {\n                                const partialEnv = beginMatch[1];\n                                const textAfterCursor = lineContent.substring(position.column - 1);\n\n                                // Check if there's already a closing brace after the cursor\n                                const hasClosingBrace = textAfterCursor.startsWith('}');\n\n                                const suggestions = latexEnvironments\n                                    .filter((env) => env.startsWith(partialEnv))\n                                    .map((env) => {\n                                        // If there's already a closing brace, we need to handle it carefully\n                                        let insertText, endColumn;\n                                        if (hasClosingBrace) {\n                                            // Include the environment content but skip past the existing closing brace\n                                            insertText = `${env}}\\n\\t$0\\n\\\\end{${env}}`;\n                                            endColumn = position.column + 1; // Replace up to and including the }\n                                        } else {\n                                            // No closing brace, add everything including the brace\n                                            insertText = `${env}}\\n\\t$0\\n\\\\end{${env}}`;\n                                            endColumn = position.column;\n                                        }\n\n                                        return {\n                                            label: env,\n                                            kind: monaco.languages\n                                                .CompletionItemKind.Keyword,\n                                            insertText: insertText,\n                                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                                            documentation: `Insert ${env} environment`,\n                                            range: {\n                                                startLineNumber:\n                                                    position.lineNumber,\n                                                startColumn: position.column - partialEnv.length,\n                                                endLineNumber: position.lineNumber,\n                                                endColumn: endColumn,\n                                            },\n                                        };\n                                    });\n                                return { suggestions };\n                            }\n\n                            return { suggestions: [] };\n                        },\n                    });\n\n                    // Auto-close \\begin{} with \\end{}\n                    monaco.languages.registerCompletionItemProvider(\"latex\", {\n                        triggerCharacters: [\"}\"],\n                        provideCompletionItems: (model, position) => {\n                            const lineContent = model.getLineContent(\n                                position.lineNumber,\n                            );\n                            const textBeforeCursor = lineContent.substring(\n                                0,\n                                position.column - 1,\n                            );\n                            const textAfterCursor = lineContent.substring(\n                                position.column - 1,\n                            );\n                            const beginMatch =\n                                textBeforeCursor.match(/\\\\begin\\{([^}]+)\\}$/);\n\n                            // Only suggest auto-close if there's not already an \\end{} on the same line\n                            // or if we haven't already inserted the environment completion\n                            if (beginMatch && !textAfterCursor.match(/^\\s*\\n\\s*\\\\end\\{/)) {\n                                const environmentName = beginMatch[1];\n\n                                // Check if this is one of our predefined environments\n                                // If so, don't auto-close as it was already handled by the environment completion\n                                if (latexEnvironments.includes(environmentName)) {\n                                    return { suggestions: [] };\n                                }\n\n                                return {\n                                    suggestions: [\n                                        {\n                                            label: `Auto-close \\\\end{${environmentName}}`,\n                                            kind: monaco.languages\n                                                .CompletionItemKind.Snippet,\n                                            insertText: `\\n\\t$0\\n\\\\end{${environmentName}}`,\n                                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                                            documentation: `Auto-close with \\\\end{${environmentName}}`,\n                                            range: {\n                                                startLineNumber:\n                                                    position.lineNumber,\n                                                startColumn: position.column,\n                                                endLineNumber:\n                                                    position.lineNumber,\n                                                endColumn: position.column,\n                                            },\n                                        },\n                                    ],\n                                };\n                            }\n\n                            return { suggestions: [] };\n                        },\n                    });\n\n                    // Create the editor\n                    monacoRef.current = monaco.editor.create(\n                        editorRef.current,\n                        {\n                            value: value,\n                            language: \"latex\",\n                            theme: \"underbranch-theme\",\n                            fontSize: 15,\n                            lineNumbers: \"on\",\n                            roundedSelection: true,\n                            scrollBeyondLastLine: false,\n                            automaticLayout: true,\n                            minimap: { enabled: false },\n                            wordWrap: \"on\",\n                            lineHeight: 24,\n                            padding: { top: 16, bottom: 16 },\n                            renderLineHighlight: \"all\",\n                            cursorBlinking: \"smooth\",\n                            cursorWidth: 2,\n                            fontFamily:\n                                \"'Fira Code', 'SF Mono', Consolas, 'Courier New', monospace\",\n                            fontLigatures: true,\n                            smoothScrolling: true,\n                            guides: {\n                                indentation: true,\n                                bracketPairs: true,\n                            },\n                        },\n                    );\n\n                    // Listen for content changes\n                    monacoRef.current.onDidChangeModelContent(() => {\n                        const currentValue = monacoRef.current.getValue();\n                        if (onChange) {\n                            onChange(currentValue);\n                        }\n                    });\n                }\n            });\n        }\n\n        // Listen for clear editor event\n        const handleClearEditor = () => {\n            if (monacoRef.current) {\n                monacoRef.current.setValue(\"\");\n            }\n        };\n\n        window.addEventListener(\"clearEditor\", handleClearEditor);\n\n        return () => {\n            window.removeEventListener(\"clearEditor\", handleClearEditor);\n            if (monacoRef.current) {\n                monacoRef.current.dispose();\n                monacoRef.current = null;\n            }\n        };\n    }, []);\n\n    // Update editor value when prop changes\n    useEffect(() => {\n        if (monacoRef.current && monacoRef.current.getValue() !== value) {\n            monacoRef.current.setValue(value);\n        }\n    }, [value]);\n\n    // Recalculate layout when editor becomes visible\n    useEffect(() => {\n        if (!monacoRef.current) return;\n\n        if (isVisible) {\n            if (layoutTimeout.current) clearTimeout(layoutTimeout.current);\n            layoutTimeout.current = setTimeout(() => {\n                try {\n                    monacoRef.current.layout();\n                } catch (e) {\n                    console.warn(\"monaco.layout failed\", e);\n                }\n            }, 50);\n        }\n\n        return () => {\n            if (layoutTimeout.current) {\n                clearTimeout(layoutTimeout.current);\n                layoutTimeout.current = null;\n            }\n        };\n    }, [isVisible]);\n\n    return React.createElement(\"div\", {\n        ref: editorRef,\n        id: \"monaco-editor\",\n    });\n};\n\nexport default LaTeXEditor;\n","const PreviewPane = ({ latexCode }) => {\n    const { useState, useEffect } = React;\n    const [processedContent, setProcessedContent] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Simple LaTeX to HTML converter for basic preview\n    const processLaTeX = (latex) => {\n        setIsLoading(true);\n\n        // Basic LaTeX processing - this is a simplified version\n        let html = latex;\n\n        // Document structure\n        html = html.replace(/\\\\documentclass\\{[^}]+\\}/, '');\n        html = html.replace(/\\\\usepackage(?:\\[[^\\]]*\\])?\\{[^}]+\\}/g, '');\n        html = html.replace(/\\\\title\\{([^}]+)\\}/, '<h1 class=\"title\">$1</h1>');\n        html = html.replace(/\\\\author\\{([^}]+)\\}/, '<p class=\"author\">By: $1</p>');\n        html = html.replace(/\\\\date\\{([^}]+)\\}/, '<p class=\"date\">$1</p>');\n        html = html.replace(/\\\\maketitle/, '<div class=\"titlepage\"></div>');\n\n        // Sections\n        html = html.replace(/\\\\section\\{([^}]+)\\}/g, '<h2>$1</h2>');\n        html = html.replace(/\\\\subsection\\{([^}]+)\\}/g, '<h3>$1</h3>');\n        html = html.replace(/\\\\subsubsection\\{([^}]+)\\}/g, '<h4>$1</h4>');\n\n        // Math environments\n        html = html.replace(/\\\\begin\\{equation\\}([\\s\\S]*?)\\\\end\\{equation\\}/g, '<div class=\"equation\">$$1$</div>');\n        html = html.replace(/\\$([^$]+)\\$/g, '<span class=\"math\">$1</span>');\n\n        // Lists\n        html = html.replace(/\\\\begin\\{itemize\\}([\\s\\S]*?)\\\\end\\{itemize\\}/g, (match, content) => {\n            const items = content.replace(/\\\\item\\s+/g, '<li>').split('<li>').filter(item => item.trim());\n            return '<ul>' + items.map(item => '<li>' + item.trim() + '</li>').join('') + '</ul>';\n        });\n\n        html = html.replace(/\\\\begin\\{enumerate\\}([\\s\\S]*?)\\\\end\\{enumerate\\}/g, (match, content) => {\n            const items = content.replace(/\\\\item\\s+/g, '<li>').split('<li>').filter(item => item.trim());\n            return '<ol>' + items.map(item => '<li>' + item.trim() + '</li>').join('') + '</ol>';\n        });\n\n        // Text formatting\n        html = html.replace(/\\\\textbf\\{([^}]+)\\}/g, '<strong>$1</strong>');\n        html = html.replace(/\\\\textit\\{([^}]+)\\}/g, '<em>$1</em>');\n        html = html.replace(/\\\\emph\\{([^}]+)\\}/g, '<em>$1</em>');\n\n        // Clean up LaTeX commands and environments\n        html = html.replace(/\\\\begin\\{document\\}/, '');\n        html = html.replace(/\\\\end\\{document\\}/, '');\n        html = html.replace(/\\\\[a-zA-Z]+(?:\\[[^\\]]*\\])?\\{[^}]*\\}/g, '');\n        html = html.replace(/\\\\[a-zA-Z]+/g, '');\n\n        // Convert line breaks\n        html = html.replace(/\\n\\s*\\n/g, '</p><p>');\n        html = '<p>' + html + '</p>';\n        html = html.replace(/<p>\\s*<\\/p>/g, '');\n\n        setProcessedContent(html);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            processLaTeX(latexCode);\n        }, 500); // Debounce processing\n\n        return () => clearTimeout(timeoutId);\n    }, [latexCode]);\n\n    if (isLoading) {\n        return React.createElement('div', { className: 'loading' }, 'Processing LaTeX...');\n    }\n\n    return React.createElement('div', { className: 'preview-content' },\n        React.createElement('div', {\n            dangerouslySetInnerHTML: { __html: processedContent }\n        }),\n        React.createElement('style', null, `\n            .preview-content h1.title {\n                text-align: center;\n                margin-bottom: 10px;\n                font-size: 24px;\n            }\n            .preview-content .author, .preview-content .date {\n                text-align: center;\n                margin: 5px 0;\n                color: #666;\n            }\n            .preview-content h2 {\n                margin: 20px 0 10px 0;\n                color: #333;\n                border-bottom: 1px solid #ddd;\n                padding-bottom: 5px;\n            }\n            .preview-content h3 {\n                margin: 15px 0 8px 0;\n                color: #444;\n            }\n            .preview-content h4 {\n                margin: 12px 0 6px 0;\n                color: #555;\n            }\n            .preview-content p {\n                margin: 10px 0;\n                line-height: 1.6;\n            }\n            .preview-content .equation {\n                text-align: center;\n                margin: 20px 0;\n                padding: 10px;\n                background: #f8f9fa;\n                border-left: 4px solid #007bff;\n                font-family: 'Times New Roman', serif;\n                font-style: italic;\n            }\n            .preview-content .math {\n                font-family: 'Times New Roman', serif;\n                font-style: italic;\n                background: #f0f0f0;\n                padding: 2px 4px;\n                border-radius: 3px;\n            }\n            .preview-content ul, .preview-content ol {\n                margin: 10px 0 10px 20px;\n            }\n            .preview-content li {\n                margin: 5px 0;\n            }\n        `)\n    );\n};\n\nexport default PreviewPane;\n","const Toolbar = ({ viewMode, onViewModeChange, latexCode }) => {\n    const handleDownload = () => {\n        const blob = new Blob([latexCode], { type: 'text/plain' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'document.tex';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n    };\n\n    const handleClear = () => {\n        if (confirm('Are you sure you want to clear the editor?')) {\n            onViewModeChange('editor');\n            // This will be handled by the parent component\n            const event = new CustomEvent('clearEditor');\n            window.dispatchEvent(event);\n        }\n    };\n\n    // Debug helpers - log button clicks\n    const handleViewClick = (mode) => {\n        console.log('[Toolbar] button click ->', mode);\n        onViewModeChange(mode);\n    };\n\n    return React.createElement('div', { className: 'toolbar' },\n        React.createElement('h1', null, 'LaTeX Editor'),\n        React.createElement('div', { className: 'toolbar-buttons' },\n            React.createElement('button', {\n                className: `btn ${viewMode === 'editor' ? 'btn-primary' : 'btn-secondary'}`,\n                onClick: () => handleViewClick('editor')\n            }, 'Editor'),\n            React.createElement('button', {\n                className: `btn ${viewMode === 'split' ? 'btn-primary' : 'btn-secondary'}`,\n                onClick: () => handleViewClick('split')\n            }, 'Split'),\n            React.createElement('button', {\n                className: `btn ${viewMode === 'preview' ? 'btn-primary' : 'btn-secondary'}`,\n                onClick: () => handleViewClick('preview')\n            }, 'Preview'),\n            React.createElement('button', {\n                className: 'btn btn-secondary',\n                onClick: handleDownload\n            }, 'Download'),\n            React.createElement('button', {\n                className: 'btn btn-secondary',\n                onClick: handleClear\n            }, 'Clear')\n        )\n    );\n};\n\nexport default Toolbar;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Toolbar from './Toolbar.js';\nimport LaTeXEditor from './LaTeXEditor.js';\nimport PreviewPane from './PreviewPane.js';\nimport App from './App.js';\n\n// Make components available globally for backward compatibility\nwindow.Toolbar = Toolbar;\nwindow.LaTeXEditor = LaTeXEditor;\nwindow.PreviewPane = PreviewPane;\nwindow.App = App;\n\n// Function to initialize the app\nconst initializeApp = () => {\n    try {\n        // Wait for React to be available\n        if (typeof React !== 'undefined' && typeof ReactDOM !== 'undefined') {\n            const root = ReactDOM.createRoot(document.getElementById('root'));\n            root.render(React.createElement(App));\n        } else {\n            console.error('React or ReactDOM not loaded');\n        }\n    } catch (error) {\n        console.error('Error loading app:', error);\n        document.getElementById('root').innerHTML = `\n            <div style=\"padding: 20px; text-align: center; color: red;\">\n                <h2>Error Loading Editor</h2>\n                <p>There was an error loading the LaTeX editor. Please check the console for details.</p>\n            </div>\n        `;\n    }\n};\n\n// Initialize when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeApp);\n} else {\n    initializeApp();\n}\n"],"names":["useState","useEffect","React","App","latexCode","setLatexCode","viewMode","setViewMode","handleCodeChange","value","console","log","document","title","e","window","dispatchEvent","Event","editorClass","previewClass","editorVisible","previewVisible","createElement","className","Toolbar","onViewModeChange","LaTeXEditor","onChange","isVisible","PreviewPane","useRef","editorRef","monacoRef","layoutTimeout","require","current","config","paths","vs","monaco","languages","register","id","editor","defineTheme","base","inherit","rules","token","foreground","fontStyle","colors","setMonarchTokensProvider","tokenizer","root","latexCommands","command","insertText","documentation","latexEnvironments","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","position","lineContent","getLineContent","lineNumber","textBeforeCursor","substring","column","commandMatch","match","partialCommand","textAfterCursor","suggestions","filter","cmd","startsWith","map","hasOpenBrace","hasClosingBrace","endColumn","includes","replace","label","kind","CompletionItemKind","Function","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","range","startLineNumber","startColumn","length","endLineNumber","beginMatch","partialEnv","env","Keyword","environmentName","Snippet","create","language","theme","fontSize","lineNumbers","roundedSelection","scrollBeyondLastLine","automaticLayout","minimap","enabled","wordWrap","lineHeight","padding","top","bottom","renderLineHighlight","cursorBlinking","cursorWidth","fontFamily","fontLigatures","smoothScrolling","guides","indentation","bracketPairs","onDidChangeModelContent","currentValue","getValue","handleClearEditor","setValue","addEventListener","removeEventListener","dispose","clearTimeout","setTimeout","layout","warn","ref","processedContent","setProcessedContent","isLoading","setIsLoading","processLaTeX","latex","html","content","items","split","item","trim","join","timeoutId","dangerouslySetInnerHTML","__html","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleClear","confirm","event","CustomEvent","handleViewClick","mode","onClick","initializeApp","ReactDOM","createRoot","getElementById","render","error","innerHTML","readyState"],"sourceRoot":""}